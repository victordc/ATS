@model ATS.Data.Model.RegisterModel
@{
    ViewBag.Title = "Add Supervisor";
}


@using (Html.BeginForm("AddSupervisor", "Admin", FormMethod.Post, new { @class = "form-horizontal" }))
{
@*@Html.AntiForgeryToken()*@
    <fieldset>
        <legend>Add Supervisor</legend>
        
        @Html.ValidationSummary(true)
        <div class="control-group">
            @*@{ Html.EnableClientValidation(false); }*@
            @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
            <div class="controls">
                @if (Model == null)
                {
                    @Html.EditorFor(m => m.UserName)
                    @Html.ValidationMessageFor(m => m.UserName, null, new {@class="badge badge-important"})
                }
                else
                {
                    @Html.HiddenFor(m => m.UserName);
                    @Html.TextBoxFor(m => m.UserName, new { disabled = "disabled", @readonly = "readonly" })
                }
            @*@{ Html.EnableClientValidation(true); }*@
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
            <div class="controls">
                @if (Model == null)
                {
                    @Html.EditorFor(m => m.FullName)
                    @Html.ValidationMessageFor(m => m.FullName, null, new {@class="badge badge-important"})
                }
                else
                {
                    @Html.HiddenFor(m => m.FullName);
                    @Html.TextBoxFor(m => m.FullName, new { disabled = "disabled", @readonly = "readonly" })
                }
            </div>
        </div>
        @*<div class="control-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            <div class="controls">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
            <div class="controls">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
        </div>*@
        <div class="control-group">
            @Html.LabelFor(m => m.RoleName, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(m => m.RoleName, ViewBag.myList as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.RoleName)
            </div>
        </div>
        <div class="control-group">
            <div class="controls">
                <input type="submit" name="btnAdd" value="Add" class="btn btn-primary"/>
            </div>
        </div>

        <table class="table table-striped table-bordered table-hover">
            <colgroup>
                <col style="width:10%">
                <col style="width:40%">
                <col style="width:40%">
                <col style="width:10%">
            </colgroup>
            <thead>
                <tr>
                    <th>User Name</th>
                    <th>Full Name</th>
                </tr>
            </thead>
            <tbody>
                @if (ViewBag.Users != null)
                {
                    foreach (var item in ViewBag.Users)
                    {
                    <tr>
                        <td>@item.UserName</td>
                        <td>@item.FullName</td>
                        @*<td>@Html.ActionLink("Edit", "UpdateUser", "Admin", new { userId = item.UserId }, new { @class = "btn btn-mini btn-primary" })
                           <input type="button" id="btnDeleteUser" class="btn btn-mini btn-danger cssDeleteUser" value="Delete" data-id="@item.UserName"/>
                        </td>*@
                    </tr>
                    }
                }
            </tbody>
        </table>
        @Html.ActionLink("Back", "AddCompany", "Admin", null, new { @class = "btn" })
        @Html.ActionLink("Next", "AddAgent", "Admin", null, new { @class = "btn btn-success" })
        @*<input type="submit" name="prevBtn" value="Back" class="btn "/>
        <input type="submit" name="nextBtn" value="Next" class="btn btn-success"/>
        *@
        
    </fieldset>
}

<script src="~/Scripts/validation.js" type="text/javascript"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



