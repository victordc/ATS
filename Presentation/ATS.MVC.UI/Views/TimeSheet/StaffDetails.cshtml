@model ATS.Data.Model.TimeSheetMaster

@{
    ViewBag.Title = "View Staff Timesheet";
    var listTimeSheetDetail = Model.TimeSheetDetail.ToList();
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("StaffDetails", "TimeSheet", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <table class="table table-striped table-bordered table-hover">
        <tr>
            <td>
                @Html.HiddenFor(model => model.TimeSheetMasterId)
                @Html.DisplayNameFor(model => model.Person.PersonName)
                @Html.HiddenFor(model => model.PersonId)
                @Html.HiddenFor(model => model.Person.PersonName)
                @Html.HiddenFor(model => model.Person.PersonId)
                @Html.HiddenFor(model => model.AgencyId)
            </td>
            <td>
                @Html.Label("Supervisor", new { @class = "control-label" })
                @Html.HiddenFor(model => model.Supervisor.PersonId)
                @Html.HiddenFor(model => model.Supervisor.PersonName)
                @Html.HiddenFor(model => model.ManagerId)
            </td>
            <td>
                @Html.Label("Company", new { @class = "control-label" })
                @Html.HiddenFor(model => model.AgencyId)
                @Html.DisplayFor(model => model.Agent.PersonName)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.Month)
                @Html.HiddenFor(model => model.Month)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.Year)
                @Html.HiddenFor(model => model.Year)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.Status)
                @Html.HiddenFor(model => model.Status)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayFor(model => model.Person.PersonName)
            </td>
            <td>
                @Html.DisplayFor(model => model.Supervisor.PersonName)
            </td>
            <td>
                @Html.DisplayFor(model => model.Company.CompanyDescription)
            </td>
            <td>
                @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.Month)
            </td>
            <td>
                @Html.DisplayFor(model => model.Year)
            </td>
            <td>
                @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.StatusList, "Value", "Text"), new { disabled = "disabled" })
            </td>
        </tr>
    </table>

    <fieldset>
        <legend>TimeSheetDetail</legend>
        <table class="table table-striped table-bordered table-hover">
            <tr>
                <th>
                    @Html.Label("Date", new { @class = "control-label" })
                </th>
                <th>
                    @Html.Label("Start Time", new { @class = "control-label" })
                </th>
                <th>
                    @Html.Label("End Time", new { @class = "control-label" })
                </th>
                <th>@Html.Label("Leave Category", new { @class = "control-label" })</th>
                <th>
                    @Html.Label("Remarks", new { @class = "control-label" })
                </th>
                <th>
                    @Html.Label("Supporting Documents", new { @class = "control-label" })
                </th>

                <th></th>
            </tr>
            @for (int i = 0; i < listTimeSheetDetail.Count; i++)
            {

                <tr>
                    <td>
                        @Html.Hidden("TimeSheetDetail[" + @i + "].TimeSheetMasterId",
                                      listTimeSheetDetail[i].TimeSheetMasterId)
                        @Html.Hidden("TimeSheetDetail[" + @i + "].TimeSheetDetailId",
                                      listTimeSheetDetail[i].TimeSheetDetailId)
                        @Html.Label("TimeSheetDetail[" + @i + "].Date",
                                   listTimeSheetDetail[i].StartTime.ToLongDateString())
                    </td>
                    <td>
                        @Html.Label("TimeSheetDetail[" + @i + "].StartTime",
                                   listTimeSheetDetail[i].StartTime.ToString("HH:mm"))
                </td>
                <td>
                    @Html.Label("TimeSheetDetail[" + @i + "].EndTime",
                                        listTimeSheetDetail[i].EndTime.ToString("HH:mm"))
            </td>
            <td>@Html.Label("TimeSheetDetail[" + @i + "].LeaveCategoryId", listTimeSheetDetail[i].LeaveCategoryId.ToString())</td>

            <td>
                @Html.Label("TimeSheetDetail[" + @i + "].Remarks", "")
        </td>
        <td>
            @Html.TextBox("TimeSheetDetail[" + @i + "].SupportDocumentUpload1", listTimeSheetDetail[i].SupportDocumentUpload1, new { type = "file" })
        <br />
        @Html.TextBox("TimeSheetDetail[" + @i + "].SupportDocumentUpload2", listTimeSheetDetail[i].SupportDocumentUpload2, new { type = "file" })
        <br />
        @Html.TextBox("TimeSheetDetail[" + @i + "].SupportDocumentUpload3", listTimeSheetDetail[i].SupportDocumentUpload3, new { type = "file" })
    </td>

</tr>
            }
        </table>

        <table class="table table-striped table-bordered table-hover">
            <tr>
                <td>@Html.Label("Remarks", new { @class = "control-label" })</td>
                <td>@Html.TextBoxFor(model => model.Remarks)</td>
            </tr>
        </table>

        <p>
            <input type="submit" name="approve" value="Approve" />
            <input type="submit" name="reject" value="Reject" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
